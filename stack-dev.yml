version: '3.8'
services:

  # Webpack Dev Server
  dev:
    image: nonfiction/webpack:v1
    command: webpack-dev-server --hide-modules --hot

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

      resources:
        limits:
          cpus: '0.7'
          memory: 500M

      restart_policy:
        condition: on-failure

      labels:
        traefik.enable: "true"
        traefik.docker.network: "proxy"

        <% NAME="$(bin/get app)" %>
        traefik.http.routers.<%= $NAME -%>.entrypoints: "websecure"
        traefik.http.routers.<%= $NAME -%>.rule: "Host(`<%= $(bin/get host) %>`,`bob.js2.nfweb.ca`,`www-bob.js2.nfweb.ca`)"
        traefik.http.routers.<%= $NAME -%>.tls.certresolver: "resolver-dns"
        traefik.http.routers.<%= $NAME -%>.tls.domains[0].main: "<%= $(bin/get swarm) %>"
        traefik.http.routers.<%= $NAME -%>.tls.domains[0].sans: "*.<%= $(bin/get swarm) %>"
        traefik.http.services.<%= $NAME -%>.loadbalancer.server.port: "443"
        traefik.http.services.<%= $NAME -%>.loadbalancer.server.scheme: "https"

    environment:
      UPSTREAM: "https://<%= $(bin/get app) %>_srv" # used by webpack.config.js

    volumes:
      - <%= $(pwd) %>/webpack.config.js:/srv/webpack.config.js
      - <%= $(pwd) %>/node_modules:/srv/node_modules
      - <%= $(pwd) %>/package.json:/srv/package.json
      - <%= $(pwd) %>/package-lock.json:/srv/package-lock.json
      - <%= $(pwd) %>/app:/srv/app
      - <%= $(pwd) %>/config:/srv/config
      - <%= $(pwd) %>/web:/srv/web

    networks:
      - backend
      - proxy

  # Wordpress
  srv:
    image: <%= $(bin/get image --tag) %>

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

      resources:
        limits:
          cpus: '0.7'
          memory: 500M

      restart_policy:
        condition: on-failure

    environment:
      HOST: "<%= $(bin/get host) %>"
      WP_ENV: "development"

      DB_HOST: "<%= $(bin/get DB_HOST) %>:<%= $(bin/get DB_PORT) %>"
      DB_NAME: "<%= $(bin/get db_name) %>"
      DB_USER: "<%= $(bin/get db_user) %>"
      DB_PASSWORD: "<%= $(bin/get db_password) %>"

      SMTP_HOST: "<%= $(bin/get SMTP_HOST) %>"
      SMTP_PORT: "<%= $(bin/get SMTP_PORT) %>"
      SMTP_USER: "<%= $(bin/get SMTP_USER) %>"
      SMTP_PASSWORD: "<%= $(bin/get SMTP_PASSWORD) %>"

    volumes:
      - <%= $(bin/get uploads) %>:/srv/web/content/uploads
      - <%= $(bin/get settings) %>:/srv/web/content/settings
      - <%= $(bin/get cache) %>:/srv/web/content/cache
      - <%= $(bin/get dump) %>:/srv/dump.sql
      - <%= $(pwd) %>/app:/srv/app
      - <%= $(pwd) %>/config:/srv/config
      - <%= $(pwd) %>/src:/srv/src
      - <%= $(pwd) %>/theme:/srv/theme
      - <%= $(pwd) %>/vendor:/srv/vendor
      - <%= $(pwd) %>/web:/srv/web
      - <%= $(pwd) %>/web/content/advanced-cache.php:/srv/web/content/advanced-cache.php:ro
      - <%= $(pwd) %>/web/content/object-cache.php:/srv/web/content/object-cache.php:ro
      - <%= $(pwd) %>/web/content/db.php:/srv/web/content/db.php:ro

    networks:
      - backend

  # Cron
  cron:
    image: nonfiction/wordpress-cron:v2

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

      resources:
        limits:
          cpus: '0.1'
          memory: 20M

      restart_policy:
        condition: on-failure

    environment:
      HOST: "<%= $(bin/get host) %>"
      HOST_USER: "<%= $(bin/get host_user) %>"
      HOST_PASSWORD: "<%= $(bin/get host_password) %>"
      DB_HOST: "<%= $(bin/get DB_HOST) %>"
      DB_PORT: "<%= $(bin/get DB_PORT) %>"
      DB_USER: "<%= $(bin/get db_user) %>"
      DB_PASSWORD: "<%= $(bin/get db_password) %>"
      DB_NAME: "<%= $(bin/get db_name) %>"

    volumes:
      - <%= $(bin/get dump) %>:/cron/dump.sql

    networks:
      - proxy


  # Object Cache
  redis:
    image: redis:alpine

    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

      resources:
        limits:
          cpus: '0.50'
          memory: 50M

    command:
      - redis-server
      - --databases 1
      - --maxmemory 50mb
      - --maxmemory-policy allkeys-lru

    networks:
      - backend


networks:
  backend:
    name: backend
    external: true
  proxy:
    name: proxy
    driver: overlay
    external: true
